{
  "openapi": "3.0.3",
  "info": {
    "title": "Task Manager with KTOR",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password",
          "email"
        ]
      },
      "RequestResetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": true
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "avatar": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "NewTeamRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "NewTaskRequest": {
        "type": "object",
        "properties": {
          "teamId": { "type": "integer" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "assignedToIds": {
            "type": "array",
            "items": { "type": "integer" }
          },
          "status": { "type": "string", "enum": ["TODO", "IN_PROGRESS", "DONE"] },
          "deadline": { "type": "string", "format": "date-time" },
          "priority": { "type": "integer" }
        },
        "required": ["teamId", "title", "status"]
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "status": { "type": "string", "enum": ["TODO", "IN_PROGRESS", "DONE"] },
          "deadline": { "type": "string"},
          "priority": { "type": "integer" }
        },
        "required": ["title", "status"]
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/users/private/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/getByUsername/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search by username",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/edit-user/{UserID}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit Users profile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "UserID",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/teams/new": {
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create new team.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Team detail"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/teams/getAll": {
      "get": {
        "summary": "Get paginated list of teams",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number (starting from 1)"
          },
          {
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/teams/getById/{teamID}": {
      "get": {
        "summary": "Get team details by ID",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the team to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
  },
    "/teams/delete/{teamID}": {
      "delete": {
        "summary": "Delete a team by ID",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the team to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted successfully"
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/teams/update/{teamID}": {
      "put": {
        "summary": "Update a team by ID",
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the team to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team updated successfully"
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/teams/add-user/{teamID}": {
      "post": {
        "summary": "Add users to a team",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "teamID",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userIds": {
                    "type": "array",
                    "items": { "type": "integer" }
                  }
                },
                "required": ["userIds"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Users added successfully" },
          "400": { "description": "Bad request" },
          "404": { "description": "Team not found" }
        }
      }
    },
    "/teams/remove-user/{teamId}/{userId}": {
      "delete": {
        "summary": "Remove a user from a team",
        "tags": ["Teams"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "User removed successfully" },
          "400": { "description": "Bad request" },
          "404": { "description": "Team or user not found" }
        }
      }
    },
    "/tasks/new": {
      "post": {
        "summary": "Create a new task",
        "tags": ["Tasks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Task created successfully" },
          "400": { "description": "Invalid request" }
        }
      }
    },
    "/tasks/update/{teamId}/{taskId}": {
      "put": {
        "summary": "Update a task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateTaskRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Task updated successfully" },
          "400": { "description": "Invalid request" },
          "404": { "description": "Task not found" }
        }
      }
    },
    "/tasks/delete/{teamId}/{taskId}": {
      "delete": {
        "summary": "Delete a task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Task deleted successfully" },
          "404": { "description": "Task not found" }
        }
      }
    },
    "/tasks/assign/{teamId}/{taskId}": {
      "post": {
        "summary": "Assign users to a task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignedToIds": {
                    "type": "array",
                    "items": { "type": "integer" }
                  }
                },
                "required": ["assignedToIds"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Users assigned successfully" },
          "404": { "description": "Task or team not found" }
        }
      }
    },
    "/tasks/getMyTasks": {
      "get": {
        "summary": "Get tasks assigned to the current user",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks assigned to the user"
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks/getTasksOfTeam/{teamId}": {
      "get": {
        "summary": "Get tasks of a specific team",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks for the team"
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Team not found" }
        }
      }
    },
    "/tasks/changeStatus/{teamId}/{taskId}": {
      "patch": {
        "summary": "Change the status of a task",
        "tags": ["Tasks"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["TODO", "IN_PROGRESS", "DONE"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task status updated successfully"
          },
          "400": { "description": "Invalid status value" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Team or task not found" }
        }
      }
    },
    "/comment/add/{teamId}/{taskId}": {
      "post": {
        "summary": "Add a comment to a task",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": { "type": "string" }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Comment added successfully" },
          "400": { "description": "Invalid request" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Team or task not found" }
        }
      }
    },
    "/comment/getComments/{teamId}/{taskId}": {
      "get": {
        "summary": "Get comments of a task",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments"
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Team or task not found" }
        }
      }
    },
    "/comment/delete/{teamId}/{commentId}": {
      "delete": {
        "summary": "Delete a comment",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Comment deleted successfully" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden, cannot delete this comment" },
          "404": { "description": "Team or comment not found" }
        }
      }
    }









  }
}
